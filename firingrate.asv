function [FR, nrSpikes] = firingrate(SpkT, PreT, PostT)
% calculate firing rate in defined time window
% INPUT - SpkT: cell array with spike times aligned to stimulus onset
% PreT & PostT (in sec) arrays

% input check
if ~isequal(size(SpkT,1), length(PreT), length(PostT))
    error('Input does not contain same amount of trials and analysis windows')
end

% initiate variables
nClust = size(SpkT,2);
nTrials = size(SpkT,1);
%baseFR = nan(nTrials, nClust);
%expFR = nan(nTrials, nClust);
FR = nan(nTrials, nClust);
nrSpikes = nan(nTrials, nClust);
window = PostT - PreT;

% firing rate calculation
for cluster = 1:nClust
    for trial = 1:nTrials
        
        % get spike times for 1 trial
        S = SpkT{trial, cluster};
        
        % count spikes in time windows
        %baseSpikes = sum(S >= -PreT & S <= 0); % preT - 0
        %expSpikes = sum(S > onsetDelay(trial) & S <= (onsetDelay(trial) + PostT)); % StimOn moment - postT

        %nrSpikes = sum(S >= -PreT & S <= (onsetDelay(trial) + PostT));
        tnrSpikes = sum(S >= PreT(trial) & S <= PostT(trial));

        % convert to firing rate (Hz)
        %baseFR(trial, cluster) = baseSpikes/abs(PreT);
        %expFR(trial, cluster) = expSpikes/abs(PostT);
        nrSpikes(trial, cluster) = tnrSpikes;
        FR(trial, cluster) = tnrSpikes/window(trial);

    end
end
end